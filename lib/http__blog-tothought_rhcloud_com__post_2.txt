http://blog-tothought.rhcloud.com//post/2

ToThought What is JPA?  How does it differ from Hibernate? Blog About Resume Admin What is JPA? How does it differ from Hibernate? May 17 2014 by Kevin Bowersox This morning, I revisited a stackoverflow question, I answered awhile back.  I wanted to provide a more complete answer and also saw the opportunity for a new post.  The question asked, "What's the difference between JPA and Hibernate?" The Java Persistence Architecture API (JPA) is a Java specification for accessing, persisting, and managing data between Java objects / classes and a relational database.  Let's take a further look at this definition.  As the API portion of the name implies, JPA is a specification, meaning it provides guidelines for developing an interface that complies with a certain standard.  While JPA dictates an interface, it does not provide an implementation of that interface, meaning there is no underlying code that performs the operations to persist an object to a relational database. It should also be noted the term Object Relational Mapping, is often used to describe the process of accessing, persisting and managing data between Java objects and a relational database. To look at the concept of JPA from another perspective, imagine if you were provided this interface. public interface JPA {
	
	public void insert(Object obj);
	
	public void update(Object obj);
	
	public void delete(Object obj);
	
	public Object select();
	
} Without further development, what immediate value does this interface provide?  While this interface has potential to provide value, at this point, very little value is provided because the interface lacks an implementation.  If this interface is used within any code it will not execute because no concrete objects that implement this interface exist to perform the work.  This same concept applies to JPA just on a larger scale since the API specification defines many interfaces and annotations. This is where the role of the JPA provider comes into play.  JPA providers develop a JPA implementation that meets the requirements of the JPA specification.  Hibernate is a JPA Provider, as well as others such as EclipseLink and TopLink.  With a JPA implementation in place Java objects can be now be persisted to a relational database, since there is underlying code to perform the work. Returning to our interface analogy, if JPA is the interface then Hibernate represents a class that implements the interface. public class Hibernate implements JPA {

	public void insert(Object obj) {
       //Persistence code
	}

	public void update(Object obj) {
	   //Persistence code
		
	}

	public void delete(Object obj) {
	  //Persistence code
		
	}

	public Object select() {
	    //Persistence code
	}
	
	public Object superSelect(){
		//Persistence Code
	}
} Notice that in addition to implementing the JPA interface, the Hibernate class contains some methods superfluous to the interface.  Keep this in mind for later.  Given this JPA implementation, we could now write some code that relies upon it to persist some data to a relational database. public class MyApplication {

	public static JPA jpa = new Hibernate();
	
	public static void main(String[] args) {
		Object object = new Object();
		jpa.insert(object);  //writes to DB
	}
} The new application works well initially, but after a couple of months its performance degrades.  Let's assume that the Hibernate implementation behind the scenes has several deficiencies causing  the poor performance.  Remember, this is for example purposes and I am not judging the merit of Hibernate. Upon encountering this issue, another provider may decide the need for another JPA implementation exists.  This provider creates their own implementation of the JPA specification and publishes the code. public class ToThoughtJpa implements JPA {
	//Implementation
} Having used the JPA interface in our application, we can now easily make the switch to the more reliant JPA implementation. public class MyApplication {

	public static JPA jpa = new ToThoughtJpa();
	
	public static void main(String[] args) {
		Object object = new Object();
		jpa.insert(object);  //writes to DB
	}
} The concept illustrated in our simple example is the main value JPA provides only on a much larger scale.  If we choose to use JPA, we can eventually switch out our chosen JPA implementation for another implementation as long as they both meet the JPA specification.  In reality, this is not always a seamless transition, since we often utilize features of the implementation that are not support by the specification and each implementation has its own little quirks.  To illustrate this point, consider if we had called the superSelect method within our application. public class MyApplication {

	public static Hibernate jpa = new Hibernate();
	
	public static void main(String[] args) {
		Object object = new Object();
		jpa.insert(object);  //writes to DB
		jpa.superSelect();
	}
} Notice that in order to call the method, the interface of type JPA must be replaced with the Hibernate implementation.  At this point, we cannot swap our JPA implementation to the ToThoughtJpa JPA implementation because its interface does not contain the superSelect method.  This example attempts to illustrate the restrictions that occur when a developer chooses to use the straight Hibernate implementation, which is not bound by the JPA specification. In summary, JPA is not an implementation, it will not provide any functionality within your application.  Its purpose is to provide a set of guidelines that can be followed by JPA providers to create an ORM implementation in a standardized manner.  This allows the underlying JPA implementation to be swapped and for developers to easily transition (think knowledge wise) from one implementation to another.  Hibernate is arguably the most popular JPA provider.  Hibernate's JPA implementation is used by many developers, however some choose to use the actual Hibernate implementation itself because the implementation may contain advanced functionality not contained in the JPA implementation. JPA Hibernate Java Comments Post a Comment Sanjay N commented on December 14 2014 10:44 AM Well explained, furthermore very useful.eagerly waiting for more... Email durga prasad commented on December 10 2014 12:45 PM Excellent article please provide this types of articles Email siva commented on December 10 2014 5:51 AM Great article. Very easy to understand Email Andy commented on December 04 2014 13:41 PM Thank you for this excellent article. It is one of the best articles I have ever read. Easy to understand and very precise. Thanks! Site Emmanuel Garc�a commented on December 02 2014 15:59 PM Great job. This is the simplest explanation of Hibernate and JPA, and therefore the most complete and understandable. All the technologies, all the frameworks, all programming languages should be explained in this way. Email Site Sravan Kumar Indupuri commented on November 20 2014 12:41 PM Very good article.Keep on writing these sort of things!!!! Email Babu commented on November 19 2014 5:08 AM Excellent explanation, great work. Email Prajakta commented on November 17 2014 5:12 AM Crystal clear explaination. No room for doubs. Thank you very much!!! Jens Hansen commented on November 11 2014 15:09 PM Excellent explanation :) Thank you! Srinivas commented on November 05 2014 5:43 AM very good article. simple explanation and i understood well Email An?e Germov?ek commented on November 05 2014 1:02 AM Thanks for your post, it's very simple to follow. Email sneha commented on November 01 2014 3:30 AM Great Post!!!!! Email Acharya commented on October 29 2014 8:04 AM nice post.really useful Champ commented on October 29 2014 3:34 AM Nice work man! Finally the queries are answered without confusions. Email Raj commented on October 23 2014 13:52 PM Excellent post Robert commented on October 22 2014 21:44 PM Very very concise explanation! You're wonderful! Omkara commented on October 15 2014 10:36 AM Nice explanation Jerry commented on October 08 2014 18:36 PM Cleared up all my questions. Thanks very much. Dharmendra commented on September 26 2014 3:38 AM Short and sweet. I got clarity within 5 minute. Thanks Mohit commented on September 19 2014 14:37 PM Excellent!! ravi commented on September 14 2014 22:46 PM wah! super, what a brilliant explanation. All this days, i saw only theories which are confusing, but this is explained practically. Very good. jokey commented on September 09 2014 16:56 PM One of the best descriptions i have ever read on this topic. Simple, yet covers the basic point. Snehal Masne commented on September 02 2014 3:05 AM JPA is dance, Hibernate is dancer! Email Site Mohan Raj commented on August 28 2014 5:42 AM Best Explanation i have ever seen between JPA and Hibernate. Hereafter i can explain to anyone Maad commented on August 25 2014 6:21 AM Great ! Email Sachin commented on August 25 2014 4:20 AM Good One dude !! Thanks... Email Matias commented on August 08 2014 13:08 PM Excelente art�culo. Simplemente genial. Gracias! Rachel commented on August 06 2014 11:02 AM Great article! Thanks for taking the time to post this! Rajiv commented on August 06 2014 7:00 AM Nice article ! Vimal commented on July 29 2014 14:03 PM Its Simple and Straight forward. Allada Venugopal commented on July 22 2014 5:03 AM Very good article for the beginers Email Sam commented on July 15 2014 15:44 PM Excellent work, I was forced to read even though I knew it. Vijay commented on July 15 2014 8:24 AM Great article, First time heard about JPA and hibernate and understood it clearly. Hamza EL HARRAOUI commented on July 05 2014 14:37 PM Thanks for this article, it's very clear. Email Ahmed commented on July 02 2014 21:51 PM Simple, clear, and to the point. Thank you. Email Site Seila commented on July 01 2014 10:24 AM I don't often write comments, but I do want to show my appreciation for this article. Thank you! Rohit commented on June 30 2014 5:55 AM This is how tutorials should be made. Simply superb prashanth commented on June 19 2014 5:23 AM Good one..Please continue this one with more examples Email Santosh commented on June 18 2014 0:05 AM Nice Article Kevin. Clear, easy to understand for a beginner and Informative. thanks! Kanchan commented on June 04 2014 2:08 AM Awesome article, concept explained beautifully...cleared all my queries... Thanks a lot !! Email Bineshcareer commented on May 31 2014 8:33 AM Excellent article... Email Nilofar commented on May 22 2014 4:05 AM Great Work! Very easy to understand as well cleared my basic concept. Thank you Bishwa commented on May 13 2014 14:37 PM Excellent for basic understanding. Great job pal. Email David commented on May 10 2014 14:56 PM Very helpful, thank you! Gerald Scott commented on May 06 2014 6:54 AM You have left out a word in the line "Remember, this is for example purposes and I judging the merit of Hibernate." I think you intend NOT to judge Hibernate! j.salomon commented on May 05 2014 6:16 AM great read and really helps me understand the story behind jpa and it's provider... Email NIV214 commented on April 29 2014 8:36 AM Awesome..... easy to understand explaination. Thank U. Rahul commented on April 26 2014 20:38 PM This explanation and the example is awesome. Very straight and simple. I have no more confusion. Great blog. sumeet kataria commented on April 23 2014 16:33 PM Well explained. From long time, was confused between JPA and hibernate... but not any more. thanks Site Daniel commented on April 23 2014 6:28 AM Well done! Thank you! Isabelle commented on April 10 2014 8:47 AM Great article. Thanks. Cedrick McCallon commented on April 06 2014 23:57 PM Thank you for this! Email Nash Walker commented on April 04 2014 9:57 AM This. Is. Clarity. Email Quang commented on April 04 2014 7:18 AM Very great ! Many thanks ! suresh commented on April 02 2014 6:52 AM Thank a ton..awesome article, cleared a lot of doubts i was wondering for so long :) Revanth commented on April 01 2014 16:01 PM Thank you for such a nice and easy-to-understand article. Makes programmer's life little easy. Email Mudassir Hanif commented on March 31 2014 6:44 AM I m very impressed by the way you crafted this article for newbies. It is very concise, to the point and very easy to understand. Thumbs up. Email Anand commented on March 20 2014 14:08 PM I have done a lot of reading on Hibernate and feel pretty comfortable about it. Today I thought of reading JPA and I started with this post. Damn! You made it so easy to me. Thanks much. Email shareef commented on March 10 2014 14:14 PM good work Email Sachin commented on March 06 2014 5:17 AM I was blindly using hibernate and never thought about difference between JPA and hibernate. Very good post because of its simplicity... Jatin commented on March 05 2014 23:20 PM Very Well Explained...Keep it Up.... R N commented on February 28 2014 17:28 PM One of the best explanations I have encountered..Thanks a lot!!.. Pratik commented on February 17 2014 16:24 PM Nice Explanation !! thanks ... Lakshmanan commented on February 17 2014 3:50 AM Nice thanks a lot for your answer to my long held question in my mind. I clearly understood the difference between hibernate and jpa. /thanks very much Email Tu Do commented on February 15 2014 1:24 AM It's clear to me. Thank you Email Vusal Zarbaliyev commented on February 14 2014 4:34 AM good explained...Thank you.. Email Karthik commented on February 04 2014 7:58 AM Great explanation !! Prasad S commented on January 16 2014 22:53 PM Awesome explanation! Thank you. Email Sbuder commented on January 15 2014 3:17 AM very informative,thanks. Mahbub commented on January 14 2014 11:23 AM Excellent. Clear and helpful article Email Lorraine commented on January 13 2014 8:54 AM I now understood the concept. Site Mohamed RT commented on January 13 2014 5:04 AM Very nice explanation. Thanks Email WeiCheng commented on January 10 2014 0:32 AM Nice article ,explain the relationship between implementation and specifications ,also different jpa implementation Email Wajiha Ahmed commented on January 05 2014 7:37 AM Cleared the whole concept, thank you for such a nice article! Email M Ramakrishna commented on December 29 2013 3:26 AM Wonderful Explanation. Thanks a lot. Email Arpit commented on December 28 2013 14:25 PM Excellent......cleared all the doubts.....Thank you..!!! Email Rahul A commented on December 18 2013 0:35 AM Really helpful! Explained with easy words along with examples! Thanks! Site Manoj commented on December 09 2013 22:53 PM Very well explained... Thank you very mush. Eric commented on November 21 2013 15:07 PM Thank you very much for all of the tutorial. Please add more tutorial on traansactional using the @Transactional annotation. Thanks again. an example of how to update 2 records on differnce table and the first one is sucessfully added and the the second one is failed so the first record should roll back. Thanks you. Vinodhini commented on November 21 2013 1:12 AM Good one ! Bhargav commented on November 18 2013 8:42 AM Nice Article. Useful. Thanks a ton. Maneesh commented on November 14 2013 22:00 PM Thanks for explaining in a simple and clear way with examples ! Email kan commented on November 06 2013 12:13 PM Clear and easy to understand explaination. Thanks! Kazi Abid Azad commented on October 30 2013 6:18 AM Very good and clear explanation. Email buddha commented on October 24 2013 9:05 AM Good explanation... Naresh commented on October 19 2013 19:00 PM You cleared my confusion about JPA and hibernate...Thanks a ton :) Email Abbas commented on October 03 2013 9:08 AM Only to say Thank you. Venkat commented on September 27 2013 8:02 AM Very nice article... Thank you so much ! Email puneet k agarwal commented on September 25 2013 22:18 PM Good Article...Informative....Appreciate your work !! Email Chellaiah commented on September 25 2013 6:16 AM Simple and Effective.Very Very clear and useful. Victor Vu commented on September 25 2013 3:25 AM this explanation couldn't be clearer. Thanks Email JI commented on September 23 2013 23:24 PM Nicely explained.... Thank you! JoJo commented on September 23 2013 12:50 PM This is so helpful! Thank you very much! srikanth commented on September 20 2013 0:41 AM Very good article.Thanks for posting Email Gangadhar commented on September 17 2013 9:07 AM Thanks For amazing Article! Email Himanshu commented on September 15 2013 8:15 AM Well explained! Priyam Dash commented on August 30 2013 1:32 AM Good article. Well described. Sai commented on August 23 2013 15:32 PM Great!! Thanks for sharing. Got the info I was looking for. Email Sanjay commented on August 22 2013 15:29 PM Good job..Kevin Akshay commented on August 08 2013 20:20 PM As clear it can be. Great Job! TK commented on August 07 2013 7:38 AM great explaination thank you, looking forward for your upcoming articles Rotimi A commented on August 03 2013 15:11 PM A very good explanation. Now am good to go with the technologies :) Tuan Anh Nguyen commented on August 01 2013 23:27 PM Thank you, these article really help encouraging developers, and good for our software development! Email Tharun commented on July 25 2013 7:58 AM I have one some confirmation here so overall Hibernate followed owened hibernate Speicifc JPA.. ? Email Narasimha commented on July 25 2013 7:55 AM Exellent Sir ji..your awesome explanation...u r the subject expert... Email reach2arunprakash commented on July 23 2013 5:04 AM Awesome Explanation Email Site Anitha commented on July 19 2013 2:22 AM Nice ARticle.Well explained Abu shalihu commented on June 05 2013 7:39 AM Well explained! Sujith commented on June 03 2013 10:02 AM Nice article... helped me to clear my doubts.. Email Sandeep jaiswal commented on May 29 2013 15:55 PM I mean this is my 1st day on JPA/Hibernate and I think , I am damn clear what it's all about. Super beginning thanks alot Email Nitin commented on May 26 2013 4:54 AM Thanks for explaining so well...I got my doubt cleared. Madhab commented on May 22 2013 13:54 PM Very well explained, thanks Sumit commented on May 21 2013 10:14 AM Awesome...thanks looking forward for answers of some more questions Email Manoj K. Ghanaksh commented on May 09 2013 17:12 PM Good Article, clear my confusion Email Yali Wu commented on May 05 2013 20:10 PM Thank you for the great article, very easy to follow and well explained! Wanderer commented on April 25 2013 13:38 PM Do you mean JPA alone is not enough? Munim commented on April 25 2013 10:27 AM Well explained to the point. John C. commented on April 23 2013 22:35 PM Thanks for the clear explanation. I've just started reading about ORM and found this article nicely lays out the pieces for someone like me with no experience in this area. I would be interested in your take on the relationship of Spring and iBatis to JPA and Hibernate (given that a relationship exists). Mike commented on April 18 2013 14:20 PM Nice article, thanks! Ka Wing commented on April 17 2013 7:12 AM Very nice article soufiane commented on April 12 2013 8:32 AM It was clear and concise. Thanks you :) Email Mayank commented on April 11 2013 5:44 AM Thankyou! Chris B commented on April 09 2013 13:36 PM Clear and concise. Thanks a lot, Kevin! Saurabh commented on April 04 2013 2:52 AM Awsome.... Balaji Mohan commented on March 29 2013 17:45 PM Thanks buddy for the illustration. Helps a beginner like me. vinit commented on March 19 2013 11:34 AM Good Explaination. Ali Hammad commented on March 19 2013 10:41 AM Does Oracle its self provide any implementation of JPA? Ali Hammad commented on March 19 2013 10:40 AM Does Oracle provide any implementation of JPA as well? Girish.. commented on March 03 2013 5:36 AM Very Nice.. Keep it up... Email Lukas commented on February 24 2013 15:21 PM Very nice article, you've made it very clear and easy to understand. Email Universe commented on February 24 2013 7:58 AM Very Nice Article. Crisp and clear Diego Ruiz commented on February 22 2013 14:49 PM Very clear. Thank you. Email lak commented on February 18 2013 4:29 AM Good article. Thanks. onepotato commented on February 14 2013 3:21 AM Simple, clear, straight to the point. Really helpful for a junior like me. Thank you. Hitesh commented on February 13 2013 21:44 PM Simple, easy and to the point. Well done. Thanks. Tahir Hussain commented on February 13 2013 16:12 PM two cents, well spent. Email Site Idrees Hamayun commented on February 10 2013 15:06 PM this was explained in a very easy and understandable manner and it helped me alot to understand concepts.Thanks very Much. Ahmed Adel commented on February 08 2013 13:37 PM This is a very simple and useful topic. You really helped me to understand things that confused me for long time Thank you very much and wish you best luck Email Prakash S commented on February 07 2013 6:50 AM Thankyou very much for providing such an easy-to-understand explanation. Diego Ramos commented on February 03 2013 22:07 PM Thank you very much! very clear and understandable! It should have more comments! I always had this doubt but now you made it clear:) Stefan commented on January 23 2013 18:59 PM Very good article. Thank you ! Bob M commented on January 16 2013 13:58 PM Great article. Very easy to understand and follow. Post a Comment *Name Email Site *Comment Find Posts By Tag Hibernate x 6 Java x 22 JPA x 16 JPQL x 2 Maven x 2 Spring x 8 Spring-Data x 10 Spring-MVC x 2 STS x 1 Tweet