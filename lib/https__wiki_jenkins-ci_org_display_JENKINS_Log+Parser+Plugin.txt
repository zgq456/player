https://wiki.jenkins-ci.org/display/JENKINS/Log+Parser+Plugin

Log Parser Plugin - Jenkins - Jenkins Wiki Skip to content Skip to breadcrumbs Skip to header menu Skip to action menu Skip to quick search Quick Search Browse Pages Blog Labels Attachments Mail Advanced People Directory Keyboard Shortcuts Confluence Gadgets Kohsuke Kawaguchi Recently Viewed Profile Network Labels Watches Drafts Settings Log Out Dashboard Jenkins Plugins Log Parser Plugin Edit Add Page Gliffy Diagram Comment Attachment Tools Attachments (8) Page History Restrictions Edit in Word Favourite Watch Stop Watching Info Link to this Page… View in Hierarchy View Wiki Markup Export to PDF Export to Word Import Word Document Copy Move Log Parser Plugin Skip to end of metadata Page restrictions apply Attachments:8 Added by rgoren -, last edited by Andrew Martin on Jan 19, 2013  (view change) show comment hide comment Comment: replace references to hudson with jenkins. fix typo. Go to start of metadata Jenkins Home Mailing lists Source code Bugtracker Security Advisories Events Donation Commercial Support Wiki Site Map Documents Meet Jenkins Use Jenkins Extend Jenkins Plugins Servlet Container Notes Plugin Information Plugin ID log-parser Changes In Latest Release Since Latest Release Latest Release Latest Release Date Required Core Dependencies 1.0.8 (archives) Dec 14, 2010 1.350 Source Code Issue Tracking Maintainer(s) Subversion Open Issues Rinat Ailon (id: rgoren) John Borghi (id: jborghi) Usage Installations 2014-Jan 5917 2014-Feb 6022 2014-Mar 6345 2014-Apr 6469 2014-May 6634 2014-Jun 6709 2014-Jul 6943 2014-Aug 7015 2014-Sep 7329 2014-Oct 7620 2014-Nov 7574 2014-Dec 7557 Parse the console output and highlight error/warning/info lines. Description The log-parser plugin parses the console log generated by the Jenkins build. Parsing the console log allows for the following features: highlighting lines of interest in the log (errors, warnings, information) dividing the log into sections displaying a summary of number of errors , warnings and information lines within the log and its sections. linking the summary of errors and warnings into the context of the full log, making it easy to find a line of interest in the log showing a summary of errors and warnings on the build page Parsed log example Summary at build level This shows a summary of errors and warnings on the build page The parsed log This is an example of a parsed log of a build. It is accessible from the "Parsed Console Output" link on the left side of the build page : The left side of the report can be expanded to browse the errors/warning/info lines. These lines are links to the full log on the right, where they can be easily located. Clicking on a certain error will bring you right to it on the full log which appears on the right side of the screen. The log is also divided into logical sections (as defined in the parsing rules configuration described below). In the summary section on the left you can see the errors/warnings as they appear in the log sections. This can help understand in what part of the build there is an error/warning. Both summary and log sections are scrollable and expandable. Configuration Several parsing options are configured at the global level. Global Configuration Parsing rules options Appears in the global Jenkins configs as section "Console Output Parsing" Configure pairs of logical names (project, description, etc.) and parsing rule files. Later on, when a job is configured for log parsing, you will be able to choose one of these configurations to implement as the parsing rules for that job. (See "Job Configuration") For each parsing rules option, specify : Parsing rule name - logical name which will be displayed in the job level configuration as an option Parsing Rules File - A file with the parsing rules implemented in this option. (See "Parsing rules files" to learn more about the syntax of these files.) Parsing rules files Format Each line in the file specifies a level (ok/error/warn/info/start) and a regular expression delimited by slashes ("/") to look for in order to mark the line as matching that level. ok/error/warn Used to identify problem lines. info These lines are highlighted blue in the report. They are used to create a set of links into the report for quick access to certain sections. start Like info lines, they are highlighted blue in the report, and appear in the set of quick access links to the report. In addition, they are used for grouping the list of errors and warnings found in that section. For example, the following line in the parsing rules file means that a line including the word "ERROR" will be marked as an error line: 
error /ERROR/
 Case insensitive matches The notation supports the Java regex embedded flag expression. To perform a case-insensitive match, use (?i) notation. Example: to match lines starting with the case-insensitive word 'error', use: 
error /(?i)^error /
 If a line matches several rules, the first one applies. So for the following set of rules : 
ok /^javadoc:/
error /Error/
 And the following line in the build log: 
javadoc: Error : could not find something
 The line will be considered "ok", and will not be highlighted as an error, since the ^javadoc: pattern is matched first. Lines starting with a '#' character, and blank lines will be ignored to allow comments and spacing. Example parsing rules file: 
ok /not really/

# match line starting with 'error ', case-insensitive
error /(?i)^error /

# list of warnings here...
warning /[Ww]arning/
warning /WARNING/

# create a quick access link to lines in the report containing 'INFO'
info /INFO/

# each line containing 'BUILD' represents the start of a section for grouping errors and warnings found after the line.
# also creates a quick access link.
start /BUILD/
 Job Configuration Go to menu: Jenkins -> job name -> Configure Go to section : Post-build Actions Check the "Console output (build log) parsing" checkbox. "Mark build Unstable on Warning" option: check to have parsed warnings mark the build 'unstable'. "Mark build Failed on Error" option : check to have parsed errors mark the build 'failed'. "Select Parsing Rules" : select the set of rules to use for parsing the logs of this job's builds (Notice that this list is derived from the global configuration ) Changelog Version 1.0.8 (December 14, 2010) Bug fix: Strip encoded ConsoleNote from log prior to parsing and display (issue #7263). Enhancement: Allow marking builds with warnings as unstable (issue #7853). Bug fix: Links to style sheets should be relative to Hudson root url (issue #8268). Useful parse lines This section collects some useful additional parse-statements contributed by users of the Log Parser Plugin JaCoCo code coverage fails to read class-data 
error /Execution data for class .* does not match./
 Labels parameters Labels Edit Done plugin-report plugin-report Delete Enter labels to add to this page:   Looking for a label? Just start typing. Comments (80)   Hide Comments Show Comments Collapse All Collapsing… Expanding… Expand All Add Comment Apr 18, 2010 Varun Thakur says: Hi , Can you also publish the compatibility information as the plugin did not wo... Hi , Can you also publish the compatibility information as the plugin did not work with the supported version of hudson (1.3.12) Permalink Reply Apr 23, 2010 Sagar Khushalani says: I tried running this with the latest version of Hudson (1.355) but was not succe... I tried running this with the latest version of Hudson (1.355) but was not successful. Has anyone tried it yet? Also, the format for the parsing rules file: Is it _error /ERROR/_ or error /ERROR/ (with or without the underscores?) Awesome plugin, thanks! Permalink Reply Jun 18, 2010 christophe mertz says: Hi, works fine for me on Hudson ver. 1.362 Very nice plugin. The correct parsi... Hi, works fine for me on Hudson ver. 1.362 Very nice plugin. The correct parsing rule is : error  /ERROR/ And important point : default directory where for the parsing rule file is the directory which contains the jobs/ dir Permalink Reply Jun 29, 2010 Paul Spencer says: However much I try I always get: log-parser plugin ERROR: Cannot parse log: ... However much I try I always get: 
log-parser plugin ERROR: Cannot parse log: Can't read parsing rules file:wc-TCK-parsing-rules
 At the moment I'm copying it to the $T_WORK directory. I've tried copying the parse rules file to /tmp and accessing it there. This plugin looks like just what I need, any ideas? Permalink Reply Jul 14, 2010 Paul Spencer says: Silly me. The parser file has to be accessible to the hudson instance. I had m... Silly me. The parser file has to be accessible to the hudson instance. I had my jobs running on remote machines and had put the parser files there. Permalink Reply Jun 21, 2010 David Ringhofer says: Somethings wrong with the paths to the CSS-file in Hudson ver. 1.363. eg. the l... Somethings wrong with the paths to the CSS-file in Hudson ver. 1.363. eg. the link points to /hudson/css/style.css while it should be /css/style.css Permalink Reply Dec 08, 2010 jborghi - says: Hi David, Indeed, the links appear to have a hardcoded 'hudson' prefix. It shou... Hi David, Indeed, the links appear to have a hardcoded 'hudson' prefix. It should be relative to the Hudson web root. Opened bug: http://issues.jenkins-ci.org/browse/JENKINS-8268 Thanks! Will fix in the next release. Permalink Reply Aug 06, 2010 Thomas Oswald says: The directory from which the search for the parsing rule file begins is NOT alwa... The directory from which the search for the parsing rule file begins is NOT always the directory which contains the "jobs" directory. It is the current working directory of the process which starts the Hudson (only Windows platforms; other platforms i don't know). Example: Hudson is started through a batch file which is located in the directory "C:\Program Files\Hudson". Then this folder is the starting folder for the rule files. Hudson is started as a windows service. Then the "%windir%\system32" or "%windir%\syswow64" folder is the starting folder for the rule files. I think this is a bug of the plugin. The search should always start at "HUDSON_HOME". An other solution is that the plugin accepts environment variables in the file path for the rule files (this doesn't work at the moment too). Permalink Reply Sep 17, 2010 Sorin Sbarnea says: I think that current configuration storing method is making this great plugin no... I think that current configuration storing method is making this great plugin not practically usable. I added a feature request to move the configuration inside the job configuration, feel free to vote it and add your opinions there. http://issues.jenkins-ci.org/browse/JENKINS-7490 Permalink Reply Oct 06, 2010 Sorin Sbarnea says: Due to the hardcoded path in the config it is impossible to use the plugin in a ... Due to the hardcoded path in the config it is impossible to use the plugin in a multiple OS hudson setup. For example I have the hudson server running on OS X but all my jobs are executed by nodes running Windows. Due to this I can't use the plugin because there is no workaround to delivery the configuration to the slave. Probably the easiest solution for this would be to modify the plugin to change the current directory to the workspace root. This would enable us to put the parser config file in the SCM. Permalink Reply Aug 26, 2010 lucashedding - says: It would be nice to have the option to store parser rules in a text box from wit... It would be nice to have the option to store parser rules in a text box from within the hudson GUI, rather than a file. I don't have file system access on our hudson server, but I do have admin access in the GUI. EDITED: I figured out how to copy a file to a specified location on the filesystem of the master hudson server using a maven plugin, however I am running into problems copying that file down to the slaves. I't like to copy the rule file to /tmp/minimalRules.txt but the "Copy to Slave" hudson plugin only puts the files into the root of $WORKSPACE. It doesn't look like this plugin supports reading environment variables so that doesn't help. Permalink Reply Aug 30, 2010 Kelly Robinson says: Is there away to get it to work with an external job? Is there away to get it to work with an external job? Permalink Reply Sep 26, 2010 Tomáš Homola says: Hi all, nice plugin but Is there way how to mark more lines by some regex patte... Hi all, nice plugin but Is there way how to mark more lines by some regex pattern(s)?? For example mark this lines of console output as error [javac] Compiling 720 source files to /home/prcek/java_aisservis/GolemEJB/build/jar [javac] /home/prcek/java_aisservis/GolemEJB/src/java/cz/aisservis/ejb/golem/utils/BeanMapper.java:4: ';' expected [javac] package cz.aisservis.ejb.golem.utils [javac] ^ [javac] 1 error I have done it to modify plugin by myself but I will(I hope others as well) appreciate if it will in official release. Thanks Tomas Permalink Reply Dec 06, 2010 jborghi - says: Hi Tomas, I'm not sure I follow. Is the change to mark and treat a group of lin... Hi Tomas, I'm not sure I follow. Is the change to mark and treat a group of lines as a single error? Do you have a patch for this? It indeed sounds very useful! Permalink Reply Dec 01, 2010 Ajay Kumar says: I am seeing garbage characters (Hex characters) when the "Add timestamps" is sel... I am seeing garbage characters (Hex characters) when the "Add timestamps" is selected in Job configure. Can anyone help me to overcome this issue or this is a bug in plugin?. Thanks in advance. Here is how the output looks [8mha:AAAAdB+LCAAAAAAAAABb85aBtbiIQSOjNKU4P0+vIKc0PTOvWK8kMze1uCQxtyC1SC8ExvbLL0llgABGJgZGLwaB3MycnMzi4My85FTXgvzkjIoiBimoScn5ecX5Oal6zhAaVS9DRQGQ1lnw9KIYADxiu4CBAAAA[0m Submitting files for "Source" perforce... [8mha:AAAAdB+LCAAAAAAAAABb85aBtbiIQSOjNKU4P0+vIKc0PTOvWK8kMze1uCQxtyC1SC8ExvbLL0llgABGJgZGLwaB3MycnMzi4My85FTXgvzkjIoiBimoScn5ecX5Oal6zhAaVS9DRQGQ1lnw9NokAMKzLyWBAAAA[0m Warning: No files to submit for "Source" Should be like this 23:46:44 Submitting files for "Source" perforce... 23:46:46 Warning: No files to submit for "Source" Permalink Reply Dec 06, 2010 jborghi - says: Hi Ajay, This was reported in JENKINS-7263. There is a patch attached to the bu... Hi Ajay, This was reported in JENKINS-7263. There is a patch attached to the bug, and a release should be coming out shortly that will address this problem. Permalink Reply Dec 08, 2010 Sam Wrankmore says: John, is there a planned release date yet? I would like to use both this and th... John, is there a planned release date yet? I would like to use both this and the timestamper plugin but at present it confuses the user. Permalink Reply Dec 08, 2010 jborghi - says: Hi Sam, It is pretty ugly! The fix should be out in the next few days. It woul... Hi Sam, It is pretty ugly! The fix should be out in the next few days. It would be easy to strip out the console notes (timestamps) but I am trying to see if they can be preserved in the parsed output. Permalink Reply Dec 09, 2010 Sam Wrankmore says: A couple of other queries/suggestions. (Some may already be possible - if so, pl... A couple of other queries/suggestions. (Some may already be possible - if so, please let me know) The first is cosmetic (but would stop distraction): Is it possible to configure the format of colours and fonts used? The orange on white for warnings is difficult to read, and the use of a non-uniformly-spaced font makes scanning the output cumbersome. Re-parsing of logs: I would like to be able to modify the parser used and 'reparse' an existing log. There are times when you may find a false-positive, wish to change the parser or use a more verbose parser on the same log without having to re-run the build job. Section grouping: Allow the expansion and reduction of lines for identified sections, similar to the top-level 'Error', 'Info' and 'Warning'. There are times where we have several hundred warnings or info messages and another level in the 'tree' would simplify their review. Thoughts/comments gratefully received. Permalink Reply Dec 14, 2010 jborghi - says: Hi Sam, Thank you for the suggestions. None are currently available... 1. Cust... Hi Sam, Thank you for the suggestions. None are currently available... 1. Custom colors/fonts. Color should be straightforward. The report was supposed to use the standard Hudson css so as to keep a consistent look and feel, but due to bug JENKINS-8268, it was not always finding the style sheet. But this still isn't a fixed width font. Maybe a configuration option to wrap the whole report in a <pre> block, similar to the console text output would suffice? 2. Re-parsing has been considered, but presents some problems. The log parsing can set the build status. It is generally not a good practice to modify the build result manually (which essentially this feature would do) after a build is complete, so we did not pursue this. Automation steps are often based on build status, so manually changing it "after the fact" introduces new complexities. I also believe the Hudson core prevents this by: a.) Only allowing the build status to be set while the build is running. b.) The status can only be set to a 'lower' level. Presumably since later steps might be run but not know the build is already unstable/failed, it wouldn't be good to upgrade the result. 3. You mean to have any build 'sections' also be a collapsible tree? Seems quite reasonable. Thanks! Permalink Reply Apr 19, 2011 Alex Vesely says: Doesn't work in my Hudson ver. 1.398. After installing the plugin, no options ap... Doesn't work in my Hudson ver. 1.398. After installing the plugin, no options appear in the Hudson Config or in any job configs. Permalink Reply Apr 19, 2011 jborghi - says: There is an issue with loading some plugins in this version of Hudson. It does n... There is an issue with loading some plugins in this version of Hudson. It does not affect Jenkins. My understanding is this will be fixed in the next release. http://java.net/projects/hudson/lists/dev/archive/2011-04/message/13 http://issues.hudson-ci.org/browse/HUDSON-8812 A workaround with this version is to set the JVM property on startup:    "-Dhudson.PluginStrategy=hudson.ClassicPluginStrategy" Permalink Reply Apr 21, 2011 David Nejedlý says: Hi, is possible to mark build as failed if some text in log isn't present? Tha... Hi, is possible to mark build as failed if some text in log isn't present? Thanks for reply Permalink Reply Apr 21, 2011 jborghi - says: Not really with this plugin. I had thought the text-finder plugin provided this ... Not really with this plugin. I had thought the text-finder plugin provided this functionality, but cannot find the feature there either. Permalink Reply Apr 21, 2011 Ajay Kumar says: Hi, I am using log parser and for some reason it's stopped showing me parsed lo... Hi, I am using log parser and for some reason it's stopped showing me parsed logs in "Parsed Console Output" UI. Here is how it looks Here is the  log informationApr 21, 2011 12:54:15 PM hudson.plugins.logparser.LogParserPublisher perform SEVERE: null Apr 21, 2011 12:54:15 PM hudson.plugins.logparser.LogParserParser parseLogBody INFO: LogParserParser: Start parsing : Test_build_27 Thanks, Ajay Permalink Reply Apr 21, 2011 jborghi - says: Hi Ajay, not much to go on here. Any stack trace? Hi Ajay, not much to go on here. Any stack trace? Permalink Reply Apr 28, 2011 Ajay Kumar says: Where can find the stack trace? I tried uninstalling and re-installing the plugi... Where can find the stack trace? I tried uninstalling and re-installing the plugin but it didn't help.  Permalink Reply May 11, 2011 jborghi - says: This can happen if the slave.jar on the slave is out of sync with the master, fo... This can happen if the slave.jar on the slave is out of sync with the master, for example after the master is upgraded. Ensure the slave has the proper slave.jar file from the server http://server/jnlpJars/slave.jar Will look into catching the exception and provide some helpful messaging. Permalink Reply Apr 28, 2011 nellyt - says: So where do I put the Parsing Rules File and how exactly do I specify where... So where do I put the Parsing Rules File and how exactly do I specify where it is on Windows7. I've tried numerous methods and the file is never found. A disk utility seems to show it is always looking for C:\Windows\.SysWOW64\myrules.txt Permalink Reply Apr 28, 2011 jborghi - says: The parsing rules file is read on the server. Use a full path to specify the loc... The parsing rules file is read on the server. Use a full path to specify the location. If you use a relative path, the base is the process that started Jenkins, which can be confusing. Permalink Reply Sep 21, 2011 Stefan Bäumler says: Please provide description of level "start" (ok/error/warning/info is clear to m... Please provide description of level "start" (ok/error/warning/info is clear to me). Permalink Reply Sep 21, 2011 jborghi - says: Updated docs, hopefully clearer now. Updated docs, hopefully clearer now. Permalink Reply Sep 22, 2011 Sam He says: The parse rule is well define. However, since the Log Parsing Rule is a Post Bui... The parse rule is well define. However, since the Log Parsing Rule is a Post Build job, when the build is failed, Log Parse Job will NOT execute. Can have enhancement on it ? Like parse the log at run time when user click the "Console" Link. ? Permalink Reply Feb 06, 2012 P Y says: hi, thanks for the plugin, but I have issues running it in a jenkins inside tom... hi, thanks for the plugin, but I have issues running it in a jenkins inside tomcat. I placed the rules file in JENKINS_HOME but I always get the error:  ERROR:Failed to parse console log : log-parser plugin ERROR: Cannot parse log: Can't read parsing rules file:minimal_rules.txt i have other pc with jenkins running directly from its home via batch and there is no issue, file is found. can you please elaborate your plugin description and tell where could i please the rules file? thanks! Permalink Reply Feb 06, 2012 jborghi - says: Looks like you're using a relative path - just the filename. If you use a relati... Looks like you're using a relative path - just the filename. If you use a relative path, the base is the process that started Jenkins, which is confusing (this should be fixed in the plugin). It is better to use a full path to the file in the configuration. Permalink Reply Feb 07, 2012 P Y says: Hi John, I am using following. is this not correct? Hi John, I am using following. is this not correct? Permalink Reply Feb 07, 2012 jborghi - says: Sadly, the plugin doesn't interpolate any variables, so you will need to specify... Sadly, the plugin doesn't interpolate any variables, so you will need to specify the actual path. Another item that needs to be fixed. Permalink Reply Sep 24, 2012 Louis Henry Nayegon says: Any idea when this issue will be fixed? Any idea when this issue will be fixed? Permalink Reply Mar 05, 2012 P Y says: Hello, I have just another question. We are lately having this kind of error: B... Hello, I have just another question. We are lately having this kind of error: BUILD SUCCESSFUL Total time: 18 minutes 18 seconds FATAL: Java heap space java.lang.OutOfMemoryError: Java heap space it seems this is happening when the Log Parser runs out of memory trying to parse a huge log. Our current log level (log4j) is DEBUG and when we change it to INFO then the whole job finish successfully. there is a way to increment memory for the log parser? Permalink Reply Mar 28, 2012 Ulli Hafner says: Is this plug-in still maintained? It is quite a time since the last release. Whe... Is this plug-in still maintained? It is quite a time since the last release. When is the next release planned? Any chance to get this plug-in migrated to github? This would help to get more users and developers involved, i.e. by sending patches via pull requests. Permalink Reply Mar 28, 2012 jborghi - says: Hi Ulli, It is migrated to github already, and there have been two patches sinc... Hi Ulli, It is migrated to github already, and there have been two patches since:https://github.com/jenkinsci/log-parser-plugin I have been delinquent in my maintenance due to ongoing work load - perhaps it is in need of a new owner. I will try to do a release with the current enhancements this week. I think that will update the plugin information to show the source is in github, is it right? Thank you, John Permalink Reply Mar 28, 2012 Kevin Garlow says: Thank you-- I think this plugin adds a great deal of value. One suggestion:... Thank you-- I think this plugin adds a great deal of value. One suggestion:  could the configuration be tagged with "[Log Parser Plugin]" (both for Jenkins configuration and in the job configuration)?  As the number of plugins increases, I think it is helpful to have a consistent label for the configuration steps. Permalink Reply May 28, 2012 Sorin Sbarnea says: In anyone is interested in a comprehensive set of parsing rules, you are welcome... In anyone is interested in a comprehensive set of parsing rules, you are welcome to try https://gist.github.com/2820044 - patches are welcome!  Permalink Reply Jul 19, 2012 wernight - says: Should that parsing file be on the master node or on the execution node? Also I'... Should that parsing file be on the master node or on the execution node? Also I'd be nice to give some example rules, like for MSBUILD and such. Permalink Reply Jul 19, 2012 jborghi - says: The parsing file needs to be on the master. If you build from the latest code, t... The parsing file needs to be on the master. If you build from the latest code, there is a job level option to specify a file in the workspace (so the rules can be kept with the job scm), but that is not released :( Sorin Sbarnea provided a great set of examples with explanations in the post directly above. Permalink Reply Aug 22, 2012 Mohamed M. says: Hi, great Plug-in, good flexibility! Now my question: is it possible to ch... Hi, great Plug-in, good flexibility! Now my question: is it possible to change the mark-up colors, say I want another color for Warning messages? Thank you! Regards Permalink Reply Jan 11, 2013 Ankit Biscuitwala says: Excellent plugin. But can someone please provide info: 1. Is there a way to dis... Excellent plugin. But can someone please provide info: 1. Is there a way to display LogParserPlugin console output in Email-Ext plugin ? 2. Any regex pattern to skip particular error ? Permalink Reply Jan 11, 2013 jborghi - says: Hi Ankit, to skip an error you can make a specific 'ok' rule that will match onl... Hi Ankit, to skip an error you can make a specific 'ok' rule that will match only it and have this rule above the general error one. Permalink Reply Mar 14, 2013 Jens says: I'm very interested in the first question.. did you find a solution for this? I'm very interested in the first question.. did you find a solution for this? Permalink Reply Apr 24, 2013 Claire Streb says: Regarding #1, see How to use Email-ext and Log Parser (with jelly script) p... Regarding #1, see How to use Email-ext and Log Parser (with jelly script) pluins in Hudson/Jenkins? Permalink Reply Feb 05, 2013 Steven Williams says: Hey I used this plug-in for some test parsing and like many seem to have mention... Hey I used this plug-in for some test parsing and like many seem to have mentioned here I had a lot of trouble because I work at a satellite location where we do not have direct access to the machine or server running our Jenkins server. I noticed recent Github versions of the plugin added the ability to use paths to parse rules files which are not on the master node. However when I downloaded and tried to use it I still could not get the plugin to recognize parsing rules on the slave node disks. I was able to customize the log parser to allow for rule to be added in an extended text window but simply removing the ability to find and use a parse rule file and instead feed in the parse rules as a string read directly from the config.jelly windows in Jenkins projects. So now I am using this parser by simply entering a few parsing rules in an extended window text field in each individual Jenkins project. This worked well for us since it only requires slave access and I typically only need a hand full, ie 4 or 5 different parsing rules per project. Would anyone be interested in me posting the modifications or possibly a branched build? I am including a screen shot of how the rules option looks for me now. Oh and this parser works great so thanks for all the initial work put in to make it! You'll notice the text field label still says "path to".... I need to clean up the changes to reflect the functionality. This is more of a hack right now than a full change but it works well. Permalink Reply Feb 05, 2013 jborghi - says: Hi Steven, When specifying rules on the node, it must be a path relative to the... Hi Steven, When specifying rules on the node, it must be a path relative to the project workspace root. However, I just noticed the configuration save logic was broken on trunk so indeed it could not work without any configuration! It is fixed now and perhaps that version can meet your need. I do like the idea of saving the rules with the build source to keep a historical record. I know people have requested the ability to add rules in a textbox, so your work is definitely welcomed. I think it would be great as a third radio option. Permalink Reply Feb 05, 2013 Steven Williams says: Hi jborghi, Thanks, I will check out GitHub and download another copy to see if... Hi jborghi, Thanks, I will check out GitHub and download another copy to see if the local workspace root path works for me now. When I get some time I'll adjust my modification as another possible radio option to redirect your parser to work from text field input as opposed to a parsing file and run it by you guys to see if we want to add it to the GitHub. Permalink Reply Feb 09, 2013 Steven Williams says: Hi John B., I have extended your recent update to include an override option to... Hi John B., I have extended your recent update to include an override option to allow the parser to use a set of rules entered in a textbox within a Jenkins project. It only required additions to two java files and the config.jelly interface for the  LogParserPublisher.java. The radioBlock caused me some trouble where text entered in a block did not properly bind. Resulting in functional code with a null pointer failure when looking for parsing rules. This appears to be a problem for entering a path for your workspace rules file as well. The overall interface is still clean and my override option should not have effected earlier code though I cant verify that the global rules work as I don't have master node access.  Could you link me to some directions on how I could upload my modifications to GitHub if you want to take a look at the addition and see if its worth keeping? Permalink Reply Feb 21, 2013 Ireneusz Makowski says: Do you know where can I download latest build of this plugin? Do you know where can I download latest build of this plugin? Permalink Reply Feb 22, 2013 jborghi - says: It is in github: https://github.com/jenkinsci/log-parser-plugin It is in github: https://github.com/jenkinsci/log-parser-plugin Permalink Reply Feb 22, 2013 Ireneusz Makowski says: I know where source code is, but I'm looking for compiled version to check it on... I know where source code is, but I'm looking for compiled version to check it on Jenkins. Can you guide me somehow? Permalink Reply Feb 22, 2013 jborghi - says: CI builds run on the Cloudbees BuildHive. You can download the .hpi from the lat... CI builds run on the Cloudbees BuildHive. You can download the .hpi from the latest build there. https://buildhive.cloudbees.com/job/jenkinsci/job/log-parser-plugin Or just download the source and run 'mvn package' to build the hpi locally. Permalink Reply Feb 22, 2013 Ireneusz Makowski says: Thank you for response :) Thank you for response :) Permalink Reply Jul 17, 2013 yamoinca - says: We use perforce as the scm. Perforce is notorious for poor choices in terms of e... We use perforce as the scm. Perforce is notorious for poor choices in terms of error messages and exit codes. So we added for example: ok /- file(s) not opened on this client./ at the top of the file, but this line is still flagged as an error: error: path1/path2/... - file(s) not opened on this client. ? Permalink Reply Jul 18, 2013 jborghi - says: It treats the string as a regex, so special regex chars need to be escaped to ma... It treats the string as a regex, so special regex chars need to be escaped to match them in the output. This might work: ok /- file\(s\) not opened on this client\./ Permalink Reply Aug 01, 2013 Koen Franken says: I seem to be stuck creating the correct regex. In a nutshell, I want to report o... I seem to be stuck creating the correct regex. In a nutshell, I want to report on all errors / warnings, but not on the summary of errors / warnings when at 0. So I've implemented 'default' rules: error /(?i)error/ warning /(?i)warning/ But I want to 'ok' following text: Summary 0 Warning(s) 0 Error(s) So the first step is: ok /(?i)0 warning/ But I don't want to 'ok' : Summary 10 Warning(s) 0 Error(s) So, I've rewritten the regex to (a number of) variants: ok /(?i)(?![d]*)0 warning/ ok /(?i)(?![\d]*)0 warning/ ok /(?i)(?![d*])0 warning/ ok /(?i)(?![\d*])0 warning/ ok /(?i)(?![1-9]*)0 warning/ But it still seems to handle 0 Warning(s) and 10 Warning(s) in the same way! Can anybody get me back on track? Thanks in advance. Permalink Reply Aug 02, 2013 jborghi - says: To allow 0 preceded by anything other than a digit, you could try (above the lin... To allow 0 preceded by anything other than a digit, you could try (above the lines that catch the warning/error): 

ok /(?i)(\D|^)0 error/
ok /(?i)(\D|^)0 warning/

 Permalink Reply Aug 02, 2013 Koen Franken says: Works like a charm! Thanks. Although I'm not sure about the use of '^'. Does th... Works like a charm! Thanks. Although I'm not sure about the use of '^'. Does this mark the beginning of a line? Because my 0 Warning(s) is at the beginning, but it will not be ok-ed by any of the following rules: 
ok /(?i)^0 warning/
ok /(?i)\^0 warning/
ok /(?i)(^)0 warning/
ok /(?i)(\^)0 warning/
ok /(?i)[^]0 warning/
ok /(?i)[\^]0 warning/
 Is there a more extensive guide to the syntax? The examples fall a bit short, especially when combining special regex characters. Permalink Reply Aug 02, 2013 jborghi - says: yes, the '^' is to match the start of line. Your first pattern should work if on... yes, the '^' is to match the start of line. Your first pattern should work if only interested in capturing the pattern at the start of the line. Note that this will fail if anything is pre-pended though, such as timestamps. 
ok /(?i)^0 warning/
 Oracle has a reference tutorial on Java regex patterns (The Java flags are slightly different from Perl, which many web examples will use): http://docs.oracle.com/javase/tutorial/essential/regex/char_classes.html Permalink Reply Aug 08, 2013 Koen Franken says: I can confirm that the pattern indeed works as expected. Must have been somethin... I can confirm that the pattern indeed works as expected. Must have been something wrong with my tests earlier. Thanks for the link! It will probably help me tackle (or work around) most of my issues. Permalink Reply Aug 08, 2013 Fernando Rosado Altamirano says: Any suggestion about how to generate a "parsed log" from a old execution? I was... Any suggestion about how to generate a "parsed log" from a old execution? I was thinking on any groovy script using the script console, but i'm not sure how to do it. I want something similar like : Email-ext plugin - Testing Templates Permalink Reply Aug 24, 2013 Greg Merrill says: Great plugin!  We faced one issue on Chrome - the anchor links don't se... Great plugin!  We faced one issue on Chrome - the anchor links don't seem to work.  I have issued a pull request on GitHub which provides a fix. My team has asked for a couple enhancements to your plugin.  I was wondering if you would have any interest in these if I contributed them back, or if we would need to fork it & go ahead on our own: 1) Categories other than Info, Warning, Error - we'd like to use the plugin to aggregate results of many different types.  What would you think of having "levels" other than those you've pre-defined (info, warning, error, ok, start) show up as additional entries below Info, Warning and Error?  For example, if I added "Artifact /Artifact: /" then it would add "Artifact" below Info/Warning/Error on the left-hand side of the UI with a list of all matches. 2) Refinement of links - right now you grep out the matching line and the entire line becomes the hyperlink on the left hand side.  What if the rules file could optionally contain a second regex after the first, and only the portion matching that regex would be shown as the link text, whereas on the right hand side the original line would be preserved?  For example: info /INFO: / /.*{0,20}/          (this would take up to 20 chars of the INFO line) warning /WARNING: / /.*?\./   (this would reluctantly take all content up to the first period. If I implement these, would you like to incorporate them back into your plugin?  Or they are a bridge too far from your original intent? Permalink Reply Sep 04, 2013 jborghi - says: Hi Greg, Thanks for your suggestions! Replied to your registered email. Hi Greg, Thanks for your suggestions! Replied to your registered email. Permalink Reply Oct 17, 2013 SHYAM CHANDAR GUPTHA says: Hi There am trying to show the build as error if it conating below links make[... Hi There am trying to show the build as error if it conating below links make[6]: *** [BUILD] Error so i tried below ways to reflect as error in rules file method1error /^make[\d]:.*[\d|\D|\w|\W]\sError /  method 2 error /^make[\d]:***\s[\d|\D|\w|\W]\sError / method 2 error /^make[\d]:***\s[\d|\D|\w|\W]\sError / jenikins version Jenkins ver. 1.509.4 however no use still it is showing pass it is not detecting the lines as error...  can some body tell me what is wrong it this..  Thanks in Anticipation...  reply to me shyamchander01@gmail.com  plugin version 1.0.8  Permalink Reply Oct 17, 2013 jborghi - says: Hi Shyam, Square brackets are special characters to a regexp so you need to esc... Hi Shyam, Square brackets are special characters to a regexp so you need to escape them to have them match (as you want) in your string. Permalink Reply Oct 18, 2013 SHYAM CHANDAR GUPTHA says: Hi Jborghi Thanks for the response I tried to escape the square brackets still ... Hi Jborghi Thanks for the response I tried to escape the square brackets still i could not able to get it. i tried below ways NOTE: Some bad parsing rules have been found: Bad parsing rule:error /^make[\d]:*\s[\d|\D|\w|\W]\sError /, Error:Dangling meta character '*' near index 13 ^make[\d]:***\s[\d|\D|\w|\W]\sError  NOTE: Some bad parsing rules have been found: Bad parsing rule:error /^make[\d]:*\s[\d|\D|\w|\W]\sError /, Error:Dangling meta character '' near index 13* ^make[\d]:***\s[\d|\D|\w|\W]\sError  so i tried to escape the * mark also using below but still not able to get the output as error.  error /^make[\d]:\s*\s[\d|\D|\w|\W]\sError / However for reporting other errors like below  make: *** [all] Error 127 --> "error /^make:.[\d|\D|\w|\W]\sError / {*}" this one worked out i am wondering how it is working. with out escaping the * and sqare brackets.  pls can you finder what am doing wrong here. Permalink Reply Oct 18, 2013 jborghi - says: Hi, your square brackets are not escaped, so the regex engine expects a characte... Hi, your square brackets are not escaped, so the regex engine expects a character set. Something like this might work (or less specific is the log pattern isn't always so precise): ﻿﻿ ^make\[\d+\]:\s+\*{3}\s+\[BUILD\] Error Permalink Reply Oct 18, 2013 Jake Elseth says: Are there any known issues using this plugin on a win 2008 64 bit server? I was ... Are there any known issues using this plugin on a win 2008 64 bit server? I was successfully using it on an win 2003 32 bit, and after upgrading it doesn't seem to want to play nice. My specific error is: ERROR:Failed to parse console log : log-parser plugin ERROR: Cannot parse log: Can't read parsing rules file:c:\filelocation\msbuild.txt I'm running jenkins as a service, and the service user has adequate permissions to the directory - so no problems there. The same file in my old instance is working fine, so it isn't the file context. The only difference I seem to be able to identify is that the OS has changed. Permalink Reply Nov 03, 2013 Eric Manfredi says: Does anyone know how to attached the parsed console output to the body of an ema... Does anyone know how to attached the parsed console output to the body of an email?  This is a great plugin, and it would be nice to able to attached the highlighted errors/warnings, etc... Thanks, Eric Permalink Reply Jan 03, 2014 Pedro fdddfd says: Can we make the Parsing Rules File location just easier to use, as I've tried ev... Can we make the Parsing Rules File location just easier to use, as I've tried every combination and no luck. For something as simple as specifiying a file location, One should really have to spend this much effort. Or at least better error message than SEVERE: log-parser plugin ERROR: Cannot parse log: Can't read parsing rules file: (Maybe say where it's looking?) I've tried plus a bunch of others i can't remember C:\GIT\Jenkin-POC\jenkins.POC\work\workspace\parsing_rules.txt C:\GIT\Jenkin-POC\jenkins.POC\work\workspace\parsing_rules C:\GIT\Jenkin-POC\jenkins.POC\work\parsing_rules.txt C:\GIT\Jenkin-POC\jenkins.POC\work\parsing_rules $ Unknown macro: {ITEM_ROOTDIR} \workspace\parsing_rules.txt $ \workspace\parsing_rules C:/GIT\Jenkin-POC/jenkins.POC/work/workspace/parsing_rules.txt C:/GIT\Jenkin-POC/jenkins.POC/work/workspace/parsing_rules C:/GIT\Jenkin-POC/jenkins.POC/work/parsing_rules.txt C:/GIT\Jenkin-POC/jenkins.POC/work/parsing_rules $ Unknown macro: {ITEM_ROOTDIR} /workspace/parsing_rules.txt $ /workspace/parsing_rules work/parsing_rules.txt \work\parsing_rules.txt Permalink Reply Jan 04, 2014 jborghi - says: Hi Pedro, Not sure if this is your issue, but the released version of the plugi... Hi Pedro, Not sure if this is your issue, but the released version of the plugin will only read the file from the master, and it should be specified as an absolute path. If you build from the git hub source, there is an option to set a path relative to the workspace root. John Permalink Reply Aug 18 Reinhard Karbas says: I have several Jenkins jobs with the Log Parser Plugin and the extended email pl... I have several Jenkins jobs with the Log Parser Plugin and the extended email plugin Management would like to have an email after the job run which contains the number of warnings found in the build Is there an easy way to get the information from the plugin as it is displayed on the job status page and include the number in the generated email? Permalink Reply Nov 05 Jon Starbird says: How do you prevent Duplicates?  I am running against MSBuild output which r... How do you prevent Duplicates?  I am running against MSBuild output which reports errors and warnings during compilation and then again at the end of the project as sort of summary so when this parser runs I get duplicates of everything. Has anyone been able to avoid that? Permalink Reply Dec 09 Andy Philpotts says: I think there may be issues trying to parse files with DOS style line endings, c... I think there may be issues trying to parse files with DOS style line endings, could be worth mentioning, I was getting an errors on empty parsing rules Permalink Reply Add Comment Powered by a free Atlassian Confluence Open Source Project License granted to Jenkins. Evaluate Confluence today. Powered by Atlassian Confluence 3.4.7, the Enterprise Wiki Printed by Atlassian Confluence 3.4.7, the Enterprise Wiki.   |  Report a bug  |  Atlassian News